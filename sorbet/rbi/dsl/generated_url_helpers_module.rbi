# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `GeneratedUrlHelpersModule`.
# Please instead update this file by running `bin/tapioca dsl GeneratedUrlHelpersModule`.

module GeneratedUrlHelpersModule
  include ::ActionDispatch::Routing::UrlFor
  include ::ActionDispatch::Routing::PolymorphicRoutes

  sig { params(args: T.untyped).returns(String) }
  def api_v1_artist_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_v1_artists_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_v1_boxset_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_v1_boxsets_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_v1_card_price_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_v1_card_prices_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_v1_card_type_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_v1_card_types_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_v1_collection_cards_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_v1_collection_magic_card_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_v1_collection_magic_cards_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_v1_collection_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_v1_collections_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_v1_color_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_v1_colors_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_v1_keyword_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_v1_keywords_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_v1_magic_card_artist_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_v1_magic_card_artists_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_v1_magic_card_color_ident_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_v1_magic_card_color_idents_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_v1_magic_card_color_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_v1_magic_card_colors_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_v1_magic_card_keyword_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_v1_magic_card_keywords_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_v1_magic_card_ruling_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_v1_magic_card_rulings_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_v1_magic_card_sub_type_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_v1_magic_card_sub_types_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_v1_magic_card_super_type_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_v1_magic_card_super_types_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_v1_magic_card_type_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_v1_magic_card_types_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_v1_magic_card_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_v1_magic_cards_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_v1_player_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_v1_players_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_v1_printing_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_v1_printings_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_v1_ruling_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_v1_rulings_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_v1_sub_type_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_v1_sub_types_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_v1_super_type_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_v1_super_types_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_rails_conductor_inbound_email_source_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_blob_representation_proxy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_blob_representation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_blob_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_conductor_inbound_email_incinerate_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_conductor_inbound_email_reroute_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_conductor_inbound_email_sources_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_conductor_inbound_email_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_conductor_inbound_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_direct_uploads_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_disk_service_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_info_properties_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_info_routes_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_info_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_mailers_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_mailgun_inbound_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_mandrill_inbound_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_mandrill_inbound_health_check_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_postmark_inbound_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_relay_inbound_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_representation_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_sendgrid_inbound_emails_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_service_blob_proxy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_service_blob_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_storage_proxy_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_storage_redirect_url(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_rails_disk_service_url(*args); end
end
